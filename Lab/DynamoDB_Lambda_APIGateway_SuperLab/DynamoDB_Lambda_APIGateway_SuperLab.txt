ðŸš€ Super-Lab: API with Lambda + API Gateway + DynamoDB


ðŸ”¹ Step 0 â€” Prerequisites
	AWS account with Console access.
	Same region selected for DynamoDB, Lambda, API Gateway.
	Basic IAM access to create roles and policies.
	Test client: Postman / curl / or a mobile app (optional).
	
ðŸ”¹ Step 1 â€” Create DynamoDB table
	Go to DynamoDB Console â†’ Create Table.
	Table name: UsersTable.
	Partition key: userId (String).
	Leave everything else default (on-demand capacity).
	Click Create Table.
	Wait until table status = Active.

ðŸ”¹ Step 2 â€” Create IAM Role for Lambda
	Go to IAM Console â†’ Roles â†’ Create role.
	Trusted entity: AWS Service â†’ Lambda.
	Permissions: attach AmazonDynamoDBFullAccess (lab only, not production).
	Role name: LambdaDynamoDBExecutionRole.
	Create role.
	
ðŸ”¹ Step 3 â€” Create Lambda functions

	Weâ€™ll make 3 functions (Python 3.13). Attach the IAM role LambdaDynamoDBExecutionRole to each.
	
	Function A: CreateUserFunction
	Name: CreateUserFunction.
	Runtime: Python 3.13.
	Role: LambdaDynamoDBExecutionRole.
	Code: CreateUserFunction.py

	Function B: getUserFunction
	Name: getUserFunction.
	Runtime: Python 3.13.
	Role: LambdaDynamoDBExecutionRole.
	Code: getUserFunction.py

	Function C: deleteUserFunction
	Name: deleteUserFunction.
	Runtime: Python 3.13.
	Role: LambdaDynamoDBExecutionRole.
	Code: deleteUserFunction.py


ðŸ”¹ Step 4 â€” Create API Gateway (HTTP API)

	Go to API Gateway Console â†’ Create API â†’ HTTP API â†’ Build.
	Name: UserAPI. Stage: $default.
	
	Create Routes and Integrations
	
	POST /user â†’ Integration = CreateUserFunction.
	GET /user/{userId} â†’ Integration = getUserFunction.
	DELETE /user/{userId} â†’ Integration = deleteUserFunction.
	
	Deploy API
		Go to Stages â†’ dev (or create a stage).
		Note Invoke URL, e.g.:
			Copy your Invoke URL from the Stages or Overview tab.
			https://wnrufsid3d.execute-api.ap-south-1.amazonaws.com

ðŸ”¹ Step 5 â€” Test API with Postman

	
		POST	https://wnrufsid3d.execute-api.ap-south-1.amazonaws.com/dev/users
			With Json
				{
					"userId": "101",
					"name": "Chaitanya Mehta",
					"email": "chaitanya@example.com"
				}

			
		GET 	https://wnrufsid3d.execute-api.ap-south-1.amazonaws.com/dev/users/101
		DELETE	https://wnrufsid3d.execute-api.ap-south-1.amazonaws.com/dev/users/101
	
	
ðŸ”¹ Step 5.1 â€”Verify DynamoDB	
	Go to DynamoDB â†’ Tables â†’ UsersTable â†’ Items
	After POST â†’ item exists
	After DELETE â†’ item removed

ðŸ”¹ Step 6 â€” Troubleshooting

	AccessDenied â†’ check role has DynamoDB permissions.
	Not found â†’ check table name matches UsersTable.
	BadRequest â†’ ensure correct body (for POST) or pathParameters (for GET/DELETE).
	Logs: check CloudWatch Logs for each Lambda.

ðŸ”¹ Step 7 Clean-up

	Delete Lambda functions
	Delete HTTP API
	Delete DynamoDB table